include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-static.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-unittests.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-license.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

image: golang:1.15

variables:
  GITHUB_RELEASE_BINARY: mender-cli
  S3_BUCKET_NAME: "mender"
  S3_BUCKET_PATH: "mender-cli"
  BUILD_DIR: build

stages:
  - build
  - test
  - test_acceptance_build
  - test_acceptance
  - publish

compile:
  stage: build
  before_script:
    # Prepare GOPATH
    - mkdir -p /go/src/github.com/mendersoftware
    - cp -r ${CI_PROJECT_DIR} /go/src/github.com/mendersoftware/${CI_PROJECT_NAME}
    - cd /go/src/github.com/mendersoftware/${CI_PROJECT_NAME}
    - make get-build-deps
  script:
    - make build-multiplatform
    - cp mender-cli.linux.amd64 $CI_PROJECT_DIR/
    - cp mender-cli.darwin.amd64 $CI_PROJECT_DIR/
  artifacts:
    paths:
      - mender-cli.linux.amd64
      - mender-cli.darwin.amd64

test:smoketests:mac:
  stage: test
  dependencies:
    - compile
  before_script: []
  script:
    - ./mender-cli.darwin.amd64
  tags:
    - mender-mac-slave

test:smoketests:linux:
  image: debian:buster
  stage: test
  dependencies:
    - compile
  before_script: []
  script:
    - ./mender-cli.linux.amd64

test:static:
  image: golang:1.15

test:static:extra:
  stage: test
  script:
    - make get-go-tools
    - make test-static

test:unit:
  image: golang:1.15

test_acceptance_build:tools:
  image: alpine
  stage: test_acceptance_build
  dependencies:
    - compile
  script:
    - apk add --no-cache make
    # make target env var
    - export PROJECT_DIR="$CI_PROJECT_DIR/"
    - cp mender-cli.linux.amd64 $CI_PROJECT_DIR/mender-cli
    - make build-acceptance-tools
  artifacts:
    untracked: true
    paths:
      - mender-cli
      - mender-artifact

test_acceptance_build:image:
  stage: test_acceptance_build
  image: docker
  services:
    - docker:19.03.5-dind
  script:
    - apk add --no-cache make
    - export PROJECT_DIR="$CI_PROJECT_DIR/"
    - make build-acceptance-image
    - docker save testing > $CI_PROJECT_DIR/acceptance_testing_image.tar
  artifacts:
    expire_in: 2w
    paths:
      - acceptance_testing_image.tar

test_acceptance:run:
  stage: test_acceptance
  image: tiangolo/docker-with-compose
  dependencies:
    - test_acceptance_build:tools
    - test_acceptance_build:image
  services:
    - docker:19.03.5-dind
  script:
    - apk add --no-cache git bash make
    - docker load -i acceptance_testing_image.tar
    # make target env var
    - export SHARED_PATH="$(dirname ${CI_PROJECT_DIR})/shared"
    - make run-acceptance
  tags:
    - docker

publish:s3:
  stage: publish
  image: debian:buster
  dependencies:
    - compile
  before_script:
    - apt update && apt install -yyq awscli
  script:
    - echo "Publishing ${CI_COMMIT_REF_NAME} version for linux to S3"
    - aws s3 cp $GITHUB_RELEASE_BINARY.linux.amd64
        s3://$S3_BUCKET_NAME/$S3_BUCKET_PATH/${CI_COMMIT_REF_NAME}/linux/mender-cli
    - aws s3api put-object-acl --acl public-read --bucket $S3_BUCKET_NAME
        --key $S3_BUCKET_PATH/${CI_COMMIT_REF_NAME}/linux/mender-cli
    - echo "Publishing ${CI_COMMIT_REF_NAME} version for darwin to S3"
    - aws s3 cp $GITHUB_RELEASE_BINARY.darwin.amd64
        s3://$S3_BUCKET_NAME/$S3_BUCKET_PATH/${CI_COMMIT_REF_NAME}/darwin/mender-cli
    - aws s3api put-object-acl --acl public-read --bucket $S3_BUCKET_NAME
        --key $S3_BUCKET_PATH/${CI_COMMIT_REF_NAME}/darwin/mender-cli
  only:
    - /^(master|[0-9]+\.[0-9]+\.x)$/
